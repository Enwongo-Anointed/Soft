                                                  HTML_CSS
1. 100VH would represent all (i.e 100%) of the viewport's height (screen's height), or the full height of the screen.
And of course, VW stands for “viewport width”, which is the viewable screen's width.
100VW would represent all (i.e 100%) of the viewport's width (screen's width), or the full width of the screen.
                                                  while
100% would represent 100% of the image or of the video or of the whatever's size (be it height or width).

2. The class element can be used on any tag.

3. 'margin: 0px auto'
The above means that margin-top, margin-bottom is "Zero(0)px" while, margin-left, margin-right is "automatic"
It is used to centre whatever it's applied to.

4. 'margin: 0'
The above means no margin, so the space around the element is set to zero.

5. 'box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);'
The above means box-shadow: [horizontal offset] [vertical offset] [blur radius] [optional spread radius] [color]; 
  The horizontal offset (required) of the shadow, positive means the shadow will be on the right of the box,
a negative offset will put the shadow on the left of the box.
  The vertical offset (required) of the shadow, a negative one means the box-shadow will be above the box,
a positive one means the shadow will be below the box.
  The blur radius (required), if set to 0 the shadow will be sharp, the higher the number, the more blurred it will be,
and the further out the shadow will extend. For instance, a shadow with 5px of horizontal offset that also has a
5px blur radius will be 10px of total shadow.
  The spread radius (optional), positive values increase the size of the shadow, negative values decrease the size.
Default is 0 (the shadow is same size as blur).
  Color (required) – takes any color value, like hex, named, rgba or hsla. If the color value is omitted, box shadows
are drawn in the current text color. But be aware, older WebKit browsers (pre Chrome 20 and Safari 6)
ignore the rule when color is omitted.
  note:'box-shadow: 2px 2px 2px 1px lightblue;'---you can just name the color.

6. A hex color code is a 6‑symbol code representing a color
named---you can just name the color.
HSLA=hue saturation lightness and alpha
RGBA=red green blue and alpha
The alpha parameter is a number between 0.0 (fully transparent) and 1.0 (fully opaque).

7. transition: transform 0.3s ease;
The above- to add transition effect, you must specify two things:the CSS property you want to add an effect to
 and the duration of the effect (:-the example means transition effect on 'transform' property with duration of 0.3s and
a transition timing function of "ease")
"ease" specifies a transition timing function with a slow start, then fast, then end slowly.

8. transform: scale(1.05);
It kind of scales what it is applied to out in a ratio of 1.5
or in another term: makes the element 5% larger than its original size.
It is actually meant to be 'transform: scale(x, y);'
The x argument can be a number or percentage. It specifies the element's scaling factor along the x-axis.
The y argument can also be a number or percentage. It defines the element's scaling factor along the y-axis.
Y-axis' default value is x. Therefore, if you do not provide a y argument, the browser automatically uses x's value.
Suppose x and y are equal. In that case, browsers will scale your element uniformly and preserve its aspect ratio.
A value of 1 means the element remains at its original size.
Values greater than 1 enlarge the element.
Values less than 1 shrink the element.

9. 'object-fit: cover;'
 For the above, The CSS object-fit property is used to specify how an <img> or <video>
should be resized to fit its container. The object-fit property can take one of the following values:
'object-fit: contain;' - The image keeps its aspect ratio, but is resized to fit within the given dimension
   inside the element's content box.
'object-fit: fill;' - This is default. The image is resized to fill the given dimension. If necessary,
   the image will be stretched or squished to fit inside the element's content box.
'object-fit: cover;' - The image keeps its aspect ratio and fills the given dimension. The image will be clipped to fit
'object-fit: none;' - The image is not resized to fit inside the element's content box.
'object-fit: scale-down;' - the image is scaled down to the smallest version of none or contain
   inside the element's content box.